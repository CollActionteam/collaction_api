image: node:16

stages:
    - checks
    - publish
    - deploy

lint:
    stage: checks
    cache:
        - key:
              files:
                  - package.json
              prefix: ${GITHUB_RUN_ID}
          paths:
              - node_modules
    script:
        - npm ci --ignore-scripts --quiet
        - npm run lint

build:
    stage: checks
    cache:
        - key:
              files:
                  - package.json
              prefix: ${GITHUB_RUN_ID}
          paths:
              - node_modules
          policy: pull
        - key: $GITHUB_RUN_ID-$DIR-dist
          paths:
              - dist/
    script:
        - npm run build
    needs:
        - job: lint

test:
    stage: checks
    cache:
        - key:
              files:
                  - package.json
              prefix: ${GITHUB_RUN_ID}
          paths:
              - node_modules
          policy: pull
    script:
        - npm run test
    needs:
        - job: lint

.publish: &publish
    stage: publish
    variables:
        DOCKER_HOST: tcp://docker:2375
    image:
        name: amazon/aws-cli
        entrypoint: ['']
    services:
        - docker:dind
    before_script:
        - amazon-linux-extras install docker
        - aws --version
        - docker --version
    script:
        - cat $DOTENV_FILE > .env
        - docker build -t $DOCKER_REGISTRY/$APP_NAME:$GITHUB_BASE_REF -f Dockerfile.prod .
        - aws ecr get-login-password | docker login --username AWS --password-stdin $DOCKER_REGISTRY
        - docker push $DOCKER_REGISTRY/$APP_NAME:$GITHUB_BASE_REF

publish-development:
    <<: *publish
    environment:
        name: development
    only:
        refs:
            - development

publish-production:
    <<: *publish
    environment:
        name: master
    only:
        refs:
            - master

.deploy: &deploy
    stage: deploy
    image:
        name: amazon/aws-cli
        entrypoint: ['']
    script:
        - aws ecs update-service --force-new-deployment --cluster $CLUSTER_NAME --service $SERVICE_NAME

deploy-development:
    <<: *deploy
    environment:
        name: development
    only:
        refs:
            - development

deploy-production:
    <<: *deploy
    environment:
        name: master
    only:
        refs:
            - master
