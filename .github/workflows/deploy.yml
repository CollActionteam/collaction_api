name: Deploy to ECR (Development)

on:
    push:
        branches: [development, master]
    workflow_dispatch:

env:
    CURRENT_ENV: ${{ github.ref == 'refs/heads/master' && 'production' || 'development' }}

jobs:
    build:
        if: ${{ github.ref == 'refs/heads/development' || github.ref == 'refs/heads/master' }}
        environment: ${{ github.ref == 'refs/heads/master' && 'production' || 'development' }}
        name: Build and Push Docker Image
        runs-on: ubuntu-latest
        steps:
            - name: Check out code
              uses: actions/checkout@v3

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v2
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: eu-central-1

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1

            - name: Build, tag, and push image to Amazon ECR
              env:
                  SERVICE_ACCOUNT_KEY_DEV: ${{ secrets.SERVICE_ACCOUNT_KEY }}
                  DEV_ENV_FILE: ${{ secrets.ENV }}
                  ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                  ECR_REPOSITORY: collaction-api
                  IMAGE_TAG: ${{ env.CURRENT_ENV }}
              run: |
                  echo $SERVICE_ACCOUNT_KEY_DEV | base64 --decode > serviceAccountKey.json
                  echo $DEV_ENV_FILE | base64 --decode > .env
                  docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
                  docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

            - name: Run pending migrations
              env:
                  SERVICE_ACCOUNT_KEY_DEV: ${{ secrets.SERVICE_ACCOUNT_KEY }}
                  DEV_ENV_FILE: ${{ secrets.ENV }}
                  MONGO_URL: ${{ secrets.MONGO_URL}}
              run: |
                  echo $SERVICE_ACCOUNT_KEY_DEV | base64 --decode > serviceAccountKey.json
                  echo $DEV_ENV_FILE | base64 --decode > .env
                  npm ci
                  npm run build
                  npm run migration:run

            - name: Deploy to Amazon ECS
              uses: aws-actions/amazon-ecs-deploy-task-definition@v1
              with:
                  task-definition: ecs/tasks/${{ env.CURRENT_ENV }}.json
                  service: collaction-api-${{ env.CURRENT_ENV }}
                  cluster: ${{ env.CURRENT_ENV }}
                  wait-for-service-stability: true
                  force-new-deployment: true
